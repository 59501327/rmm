@Library('gpuci_shared_lib') _

pipeline {
  agent any
  stages {
    stage("Build Stage") {
      steps {
        sh "env"
        echo "${currentBuild.buildCauses}"
      }
    }
    stage("C++ Matrix Build") {
      steps {
        script {
          parallel generateStage("cuda_build", {
            echo "Hello CUDA!"
          })
        }
      }
    }

    stage("Python Matrix Build") {
      steps {
        script {
          parallel generateStage("python_build", {
            echo "Hello Python!"
          })
        }
      }
    }

    stage("PR/Branch Test Stage") {
      when { not { triggeredBy 'TimerTrigger' } }
      environment {
          UPLOAD_PKGS = """${sh(
                returnStdout: true,
                script: 'echo "$GIT_BRANCH" | grep -iq "pr" && echo "false" || echo "true"'
            )}"""
      }
      steps {
        sh "env"
        echo "${currentBuild.buildCauses}"
        script {
          parallel generateStage("branch_pr_test",{
            echo "hello from rmm repo"
            echo "Upload packages: \${UPLOAD_PKGS}"
          })
        }
      }
    }

    stage("Nightly Test Stage") {
      when { triggeredBy 'TimerTrigger' }
      environment { UPLOAD_PKGS = "true" }
      steps {
        sh "env"
        echo "${currentBuild.buildCauses}"
        script {
          parallel generateStage("nightly_test", {
            echo "Upload packages: \${UPLOAD_PKGS}"
            echo "Uploading packages..."
          })
        }
      }
    }
  }
}